name: Github-actions
on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *" # run test at the end of every day
env:
  projects: "ns-7-angular, ns-8-angular" # folder name for each project with its own dependencies
  nativescript: "7.2.1, 8.1.2" # appropriate nativescript version for each project
  TEMP_REPORT_FILE: "temp/temp-results.txt"
  REPORT_FILE: "PLUGINS_COMPATIBILITY.md"
  ANDROID_RESULT_JSON_FILE: "android-result.json"
  IOS_RESULT_JSON_FILE: "ios-result.json"
jobs:
  test-android:
    runs-on: ubuntu-latest
    outputs:
      ubuntu-angular-test-result: ${{ steps.ubuntu-angular-test-result.outputs.result }}
      ubuntu-angular-test-result-json: ${{ steps.ubuntu-angular-test-result.outputs.result-json }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: npm i

      - name: TEST PLUGINS
        id: testing
        uses: ./.github/actions/test-plugins-action/
        with:
          projects-folders: ${{ env.projects }}
          nativescript-versions: ${{ env.nativescript }}
          is-android: true

      - name: Get plugins test result
        id: ubuntu-angular-test-result
        run: |
          echo "::set-output name=result::${{ steps.testing.outputs.pluginsTestResult }}"
          echo "::set-output name=result-json::${{ toJSON(steps.testing.outputs.pluginsTestResultJson) }}"

  test-ios:
    runs-on: macos-latest
    outputs:
      mac-angular-test-result: ${{ steps.mac-angular-test-result.outputs.result }}
      mac-angular-test-result-json: ${{ steps.mac-angular-test-result.outputs.result-json }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - run: ruby -v
      - run: python -m pip install six
      - run: npm i

      - name: TEST PLUGINS
        id: testing-ios
        uses: ./.github/actions/test-plugins-action/
        with:
          projects-folders: ${{ env.projects }}
          nativescript-versions: ${{ env.nativescript }}

      - name: Get plugins test result
        id: mac-angular-test-result
        run: |
          echo "::set-output name=result::${{ steps.testing-ios.outputs.pluginsTestResult }}"
          echo "::set-output name=result-json::${{ toJSON(steps.testing-ios.outputs.pluginsTestResultJson) }}"


  save-test-results:
    runs-on: "ubuntu-latest"
    needs: [test-android, test-ios]
    if: ${{ success() && needs.test-android.outputs.ubuntu-angular-test-result && needs.test-ios.outputs.mac-angular-test-result }}
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "${{ needs.test-android.outputs.ubuntu-angular-test-result }}"
          echo "${{ needs.test-android.outputs.ubuntu-angular-test-result-json }}"
          echo "${{ needs.test-ios.outputs.mac-angular-test-result }}"
          echo "${{ needs.test-ios.outputs.mac-angular-test-result-json }}"

      - name: Save result json to a file
        run: |
          touch reports/${{ env.ANDROID_RESULT_JSON_FILE }} reports/${{ env.IOS_RESULT_JSON_FILE }}
          echo "${{ needs.test-android.outputs.ubuntu-angular-test-result-json }}" > reports/${{ env.ANDROID_RESULT_JSON_FILE }}
          echo "${{ needs.test-ios.outputs.mac-angular-test-result-json }}" > reports/${{ env.IOS_RESULT_JSON_FILE }}

      - name: Make a headline for the the report
        run: |
          echo ${{ env.REPORT_FILE }}
          echo "| Plugin | Version | android {N}7  | android {N}8 | iOS {N}7 | iOS {N}8 |"> ${{ env.REPORT_FILE }}
          echo "| --- | :---: | :---: | :---: | :---: | :---: |" >> ${{ env.REPORT_FILE }}

      - name: Create a table of test result to save it ${{ env.REPORT_FILE }}
        # create empty files
        # convert string to columns of data
        # merge result columns from ubuntu and mac
        # replace `,` with ` | ` to get a nice table in the ${{ env.REPORT_FILE }}
        run: |
          mkdir temp && touch temp/ubuntu-test-result.txt temp/mac-result.txt ${{ env.TEMP_REPORT_FILE }} ${{ env.REPORT_FILE }}

          echo "${{ needs.test-android.outputs.ubuntu-angular-test-result }}" | awk '{gsub(/;/,"\n"); print;}' > temp/ubuntu-test-result.txt
          echo "${{ needs.test-ios.outputs.mac-angular-test-result }}" | awk '{gsub(/;/,"\n"); print;}' > temp/mac-result.txt

          paste -d "," temp/ubuntu-test-result.txt temp/mac-result.txt > ${{ env.TEMP_REPORT_FILE }}

          awk '{gsub(/,/," | "); print;}' ${{ env.TEMP_REPORT_FILE }} >> ${{ env.REPORT_FILE }}

#      // remove temp and run "tns clean"
#       - name: Clean temp directory
#          run: rm -rf *
#          working-directory: ./temp

      - name: Commit report
        run: |
          git config --global user.name 'Alex Sinitsa'
          git config --global user.email 'alexander.sinitsa@valor-software.com'
          git status
          git add .
          git remote set-url origin https://x-access-token:${{ secrets.SECRET_GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "Check plugins (generated)"
          git push
